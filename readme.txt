%%%%%%GA for dental implant FEA%%%%%

The following content explains the functions and details of the genetic algorithm automation code for FEA of the dental implant with multiple objective functions.

Installation:

The code requires both Matlab and Nastran software installed

Files (make sure that the following files are included under the same directory):
can ESD-element.txt
cort ESD-element.txt
can ESD-tooth-alan.txt
cort ESD-tooth-alan.txt
solid_implant_normalstress_x_1.txt
solid_implant_shearstress_xy_1.txt
tooth_normalstress_x_1.txt
tooth_shearstress_xy_1.txt
implant_remodel.bdf
1_implant_tooth_modified.bdf
1_implant_new_modified.bdf
1_implant_solid_implant_modified.bdf
implant_remodel.m
ReadToothResults.m
main.m
ReadSolidImplantInterface.m
GenerateChromosomes.m
RunCrossover.m
RunFEAModification.m
RunFitness.m
RunNastran.m
RunNastranResults.m
RunRoulleteWheel.m
nas101b.bat

Usage:
implant_remodel.bdf is the original fea model generated by MSC Patran. Some adjustments are needed in the command line of the bdf to get desired output from f06 such as ESE,
stresses for each element. Please refer to nastran quick reference guide for details.

Step 1 (change bdf format and assign unique and individual property and material ID to each element) - in Matlab, run implant_remodel.m, which will read implant_remodel.bdf,
and output 1_implant_new_modified.bdf. material ids and property ids are unique for this model. To work for other cases, modification is required in the code.
Output -> 1_implant_new_modified.bdf

Step 2 (collect tooth element strain density data first) - From identified interface element ids in Patran, we need to read interface failure index when the tooth properties are assigned to the design field, then read stress data
from MSC Nastran output. the batch file path and name need to be adjusted for different enviornment (nas101b.bat) 
Files required:1_implant_tooth_modified.bdf, can ESD-element.txt, cort ESD-element.txt, ReadToothResults.m, and nas101b.bat 
Output ->cort ESD-tooth-alan.txt, can ESD-tooth-alan.txt

Step 3 (start genetic algorithm code to determine converged/optimized lattice model) - the major steps are written in main.m where it links to multiple functions to achieve the goal. Functions are all separated in different m files
for easy access and organizaiton.

Files required:
main.m
ReadSolidImplantInterface.m
GenerateChromosomes.m
RunCrossover.m
RunFEAModification.m
RunFitness.m
RunNastran.m
RunNastranResults.m
RunRoulleteWheel.m
nas101b.bat
can ESD-element.txt
cort ESD-element.txt
can ESD-tooth-alan.txt
cort ESD-tooth-alan.txt
1_implant_new_modified.bdf
nas101b.bat

Concepts here are:
	1. Generate initial randomized chromosomes (random relative densities) for materials, and then send the data to bdf.
	2. Encode for genetic algorithm 
	3. Obtain initial results from nastran
	4. Determine fitness value
	5. Apply roullete wheel selection method to pick the next suitable generation of chromosomes
	6. Crossover and Mutate these chromosomes
	7. Decode and send the generated chromosomes (new relative densities) for materials into bdf.
	8. Submit the population to Nastran for analysis.
	9. Record fitness value
	10.Repeat step 5-9 until convergence/max population

The final bdf will be the optimized lattice model for the implant.

In the main.m, Global Constant and Local data initialization are yet to be determined for specific cases. Variables with constant values in m files are used for memory allocation and efficiency.
They need to be customized for different models.








